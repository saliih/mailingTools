<?php

namespace Proxies\__CG__\MailingBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class modelmailing extends \MailingBundle\Entity\modelmailing implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'MailingBundle\\Entity\\modelmailing' . "\0" . 'id', '' . "\0" . 'MailingBundle\\Entity\\modelmailing' . "\0" . 'title', '' . "\0" . 'MailingBundle\\Entity\\modelmailing' . "\0" . 'template', '' . "\0" . 'MailingBundle\\Entity\\modelmailing' . "\0" . 'send', '' . "\0" . 'MailingBundle\\Entity\\modelmailing' . "\0" . 'dcr', '' . "\0" . 'MailingBundle\\Entity\\modelmailing' . "\0" . 'finshed', '' . "\0" . 'MailingBundle\\Entity\\modelmailing' . "\0" . 'opened', '' . "\0" . 'MailingBundle\\Entity\\modelmailing' . "\0" . 'sended', '' . "\0" . 'MailingBundle\\Entity\\modelmailing' . "\0" . 'total', '' . "\0" . 'MailingBundle\\Entity\\modelmailing' . "\0" . 'process');
        }

        return array('__isInitialized__', '' . "\0" . 'MailingBundle\\Entity\\modelmailing' . "\0" . 'id', '' . "\0" . 'MailingBundle\\Entity\\modelmailing' . "\0" . 'title', '' . "\0" . 'MailingBundle\\Entity\\modelmailing' . "\0" . 'template', '' . "\0" . 'MailingBundle\\Entity\\modelmailing' . "\0" . 'send', '' . "\0" . 'MailingBundle\\Entity\\modelmailing' . "\0" . 'dcr', '' . "\0" . 'MailingBundle\\Entity\\modelmailing' . "\0" . 'finshed', '' . "\0" . 'MailingBundle\\Entity\\modelmailing' . "\0" . 'opened', '' . "\0" . 'MailingBundle\\Entity\\modelmailing' . "\0" . 'sended', '' . "\0" . 'MailingBundle\\Entity\\modelmailing' . "\0" . 'total', '' . "\0" . 'MailingBundle\\Entity\\modelmailing' . "\0" . 'process');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (modelmailing $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', array($title));

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', array());

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setTemplate($template)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTemplate', array($template));

        return parent::setTemplate($template);
    }

    /**
     * {@inheritDoc}
     */
    public function getTemplate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTemplate', array());

        return parent::getTemplate();
    }

    /**
     * {@inheritDoc}
     */
    public function setSend($send)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSend', array($send));

        return parent::setSend($send);
    }

    /**
     * {@inheritDoc}
     */
    public function getSend()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSend', array());

        return parent::getSend();
    }

    /**
     * {@inheritDoc}
     */
    public function setDcr($dcr)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDcr', array($dcr));

        return parent::setDcr($dcr);
    }

    /**
     * {@inheritDoc}
     */
    public function getDcr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDcr', array());

        return parent::getDcr();
    }

    /**
     * {@inheritDoc}
     */
    public function setFinshed($finshed)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFinshed', array($finshed));

        return parent::setFinshed($finshed);
    }

    /**
     * {@inheritDoc}
     */
    public function getFinshed()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFinshed', array());

        return parent::getFinshed();
    }

    /**
     * {@inheritDoc}
     */
    public function setOpened($opened)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOpened', array($opened));

        return parent::setOpened($opened);
    }

    /**
     * {@inheritDoc}
     */
    public function getOpened()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOpened', array());

        return parent::getOpened();
    }

    /**
     * {@inheritDoc}
     */
    public function setSended($sended)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSended', array($sended));

        return parent::setSended($sended);
    }

    /**
     * {@inheritDoc}
     */
    public function getSended()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSended', array());

        return parent::getSended();
    }

    /**
     * {@inheritDoc}
     */
    public function setTotal($total)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTotal', array($total));

        return parent::setTotal($total);
    }

    /**
     * {@inheritDoc}
     */
    public function getTotal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTotal', array());

        return parent::getTotal();
    }

    /**
     * {@inheritDoc}
     */
    public function addProcess(\MailingBundle\Entity\processmailing $process)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addProcess', array($process));

        return parent::addProcess($process);
    }

    /**
     * {@inheritDoc}
     */
    public function removeProcess(\MailingBundle\Entity\processmailing $process)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeProcess', array($process));

        return parent::removeProcess($process);
    }

    /**
     * {@inheritDoc}
     */
    public function getProcess()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProcess', array());

        return parent::getProcess();
    }

}
